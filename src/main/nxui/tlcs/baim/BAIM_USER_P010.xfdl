<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form cssclass="bg_pop01" height="170" id="BAIM_BAIM_P010" onload="form_onload" titletext="비밀번호변경(팝업)" width="360" oninit="form_oninit">
    <Layouts>
      <Layout description="" height="170" width="360">
        <Static bottom="0" cssclass="pop_cont" id="sta00" left="0" right="0" taborder="4" top="34" text=""/>
        <Static cssclass="sta_tbody_td01" id="stc_search02" left="9" right="6" taborder="9" height="25" top="103"/>
        <Static cssclass="sta_tbody_td01" id="stc_search01" left="9" right="6" taborder="10" height="25" top="79"/>
        <Static cssclass="sta_tbody_td01" id="stc_search00" left="9" right="6" taborder="11" height="25" top="55"/>
        <Static cssclass="pop_tit_txt01" domainId="T0167" height="34" id="sta01" left="15" taborder="3" text="비밀번호변경" top="0" width="99"/>
        <Button cssclass="btn_pop_img_close" height="22" id="btnClose00" onclick="btnClose_onclick" right="15" taborder="5" top="5" width="22" text=""/>
        <Static cssclass="sta_tbody_th01" domainId="T0246" id="sta10" left="9" taborder="6" text="사용자 ID" width="92" height="25" top="55"/>
        <Static cssclass="sta_tbody_th01" domainId="T1196" id="sta06" left="9" taborder="7" text="비밀번호" width="92" height="25" top="79"/>
        <Static cssclass="sta_tbody_th01" domainId="T0088" id="sta05" left="9" taborder="8" text="비밀번호 재확인" width="92" height="25" top="103"/>
        <Button cssclass="btn_ty01_save" domainId="T0830" height="23" id="btnSave" onclick="btnOnClick" taborder="2" text="변경" top="137" width="68" left="286"/>
        <Edit height="19" id="edtUserId" readonly="false" taborder="12" top="58" width="246" left="104" enable="false"/>
        <Edit height="19" id="edtUserPw" readonly="false" taborder="0" top="82" width="246" left="104" password="true"/>
        <Edit height="19" id="edtUserPwRe" readonly="false" taborder="1" top="106" width="246" left="104" password="true"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**
*  비밀번호 변경 팝업
*  @MenuPath        
*  @FileName 		BAIM_UESR_P010.xfdl
*  @Creator 		Kim Jin Hwan
*  @CreateDate		2020.03.03
*  @Desction        비밀번호 변경 팝업
************** 소스 수정 이력 ****************************************************************
*  date				Modifier				Description
************************************************************************************************
*  2020.03.02		Kim Jin Hwan			최초 생성
************************************************************************************************
*/


 include "lib::lib_Form.xjs";
/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/

/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//nexacro application 
	this.objApp = nexacro.getApplication() ;
	
	//화면 공통 기능 처리
	this.gfnFormOnLoad(obj);
	
	// 초기화
	this.fnInit();
	
	
};

/***********************************************************************************************
 * @function	: forOninit
 * @description	: FORM init
 * @param		: obj	- nexacro.Form
 * @param		: e		- nexacro.EventInfo 
 * @return N/A
/***********************************************************************************************/
this.form_oninit = function(obj:nexacro.Form,e:nexacro.EventInfo)
{
	//nexacro application 
	this.objApp = nexacro.getApplication();
	
	// 파라미터 셋팅
	this.dsUserInfo.setColumn(0, "USER_ID", this.getOwnerFrame().pUserId);
	
};



 /***********************************************************************************************
 * @function	: form_onload
 * @description	: FORM init
 * @param		: obj	- nexacro.Form
 * @param		: e		- nexacro.EventInfo 
 * @return N/A
/***********************************************************************************************/
this.fnInit = function(obj:nexacro.Form,e:nexacro.EventInfo)
{
	// 패스워드에 포커스
	this.edtUserPw.setFocus();
};



/************************************************************************************************
* TRANSACTION 서비스 호출 처리
************************************************************************************************/

/************************************************************************************************
 * CALLBACK 콜백 처리부분
 ************************************************************************************************/
/***********************************************************************************************
 * @function: fnCallback
 * @description: 트랜젝션 후 호출 되는 callback 함수.
 * @param : svcID - 서비스 id
 * @param : errorCode - error 코드
 * @param : errorMsg - error 메세지
 * @return N/A
/***********************************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	trace("[fnCallback()] svcID["+svcID+"] errorCode["+errorCode+"] errorMsg["+errorMsg+"]");
	
	if(errorCode < 0) {    
		this.alert(errorMsg);
		return;
	}
	
	switch(svcID) {
		// 비밀번호 변경
		case "updateUserPw" :	
		
			this.gfnAlert("변경되었습니다. 재로그인 해주세요.");
			
			this.close();
			
		break;
		

		default :
		break;
	}
};


 /************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/

 
 /************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
/**
 * @description popup close
*/
this.btnClose_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close();
};



/***********************************************************************************************
 * @function	: btnOnClick
 * @description	: 버튼이벤트 제어
 * @param		: obj - nexacro.Button
 * @param		: e - nexacro.ClickEventInfo
 * @return N/A
/***********************************************************************************************/
this.btnOnClick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	switch(obj.name) 
	{
		// 저장
		case "btnSave" :
			this.fnSave();
		break;
		
		default :	
		break;
	}
};


/***********************************************************************************************
 * @function	: fnSave
 * @description	: 저장.
 * @param		: N/A
 * @return N/A
/***********************************************************************************************/ 
this.fnSave = function() {

	/** 저장할 데이터 유효성 체크*********************************************************************/
	
	var userId = this.edtUserId.value;
	var userPw = this.edtUserPw.value;
	var userPwRe = this.edtUserPwRe.value;
	
	// 비밀번호
	if( this.gfnIsNull(userPw) ){
		this.gfnAlert("비밀번호를 입력해주세요.");
		this.edtUserPw.setFocus();
		return;
	}
	
	// 비밀번호 재확인
	if( this.gfnIsNull(userPwRe) ){
		this.gfnAlert("비밀번호 재확인을 입력해주세요.");
		this.edtUserPwRe.setFocus();
		return;
	}
	
	// 비밀번호, 비밀번호 재확인 비교
	if( userPw != userPwRe ){
		this.gfnAlert("비밀번호가 일치하지 않습니다.");
		return;
	}
	
	// 공백문자 체크
	var re = new RegExp("[\\s]+", "");
	if (re.test(userPw)) {
		this.gfnAlert("공백 문자는 사용할 수 없습니다.");
		this.edtUserPw.setFocus();
		return false;
	}
	
	// 1. 8자 이상 체크
	if(userPw.length < 8) 
	{
		this.gfnAlert("패스워드는 8자 이상이어야 합니다.");
		this.edtUserPw.setFocus();
		return false;
	}
	
	
	var pwComplexCnt = 0;
	re.compile("[0-9]+", "");
	if (re.test(userPw)) {
		pwComplexCnt = pwComplexCnt + 1;
		trace("숫자 포함 통과");
	}
	
	re.compile("[A-Za-z]+", "");
	if (re.test(userPw)) {
		pwComplexCnt = pwComplexCnt + 1;
		trace("영문 포함 통과");
	}
	
	re.compile("[!-/:-@\\[-`\\{-~]+", "");
	if (re.test(userPw)) {
		pwComplexCnt = pwComplexCnt + 1;
		trace("특수문자 포함 통과");
	}
	
	// 2. 비밀번호는 숫자+영문+특수문자의 조합 체크
	if (pwComplexCnt < 3) {
		
		this.gfnAlert("비밀번호는 숫자+영문+특수문자의 조합으로 가능합니다.");
		this.edtUserPw.setFocus();
		return false;
	}
	
	// 3. ID와 4자리 이상 동일한 비밀번호 사용 체크
	for (var i = 0; i < userPw.length - 4; i++) {
		if (userId.indexOf(userPw.substr(i, 4)) > -1) {
			
			this.gfnAlert("ID와 4자리 이상 동일한 비밀번호는 사용할 수 없습니다.");
			this.edtUserPw.setFocus();
			return false;
		}
	}
	
	// 4. 비밀번호에는 4자리 이상 반복되는 문자나 숫자 사용 체크
	var serialCount = 1;
	for (var i = 1; i < userPw.length; i++) {
		if ((userPw.charAt(i) >= "0" && userPw.charAt(i) <= "9")
			|| (userPw.charAt(i) >= "A" && userPw.charAt(i) <= "Z")
			|| (userPw.charAt(i) >= "a" && userPw.charAt(i) <= "z")) {
			if (userPw.charCodeAt(i-1) + 1 === userPw.charCodeAt(i)) {
				serialCount++;
			} else {
				serialCount = 1;
			}
		} else {
			serialCount = 1;
		}
		if (serialCount > 3) {
			this.gfnAlert("비밀번호에는 4자리 이상 반복되는 문자나 숫자를 사용할 수 없습니다.");
			
			this.edtUserPw.setFocus();
			return false;
		}
	}
	
	/****************************************************************************************************/
	
	this.gfnCustomConfirm("저장하시겠습니까?", function(sPopId, bResult){
	
		if(!bResult) return;
	
		// 트랜잭션 호출 (저장)
		this.gfnTransaction("updateUserPw");
	});
	
	
	

};




]]></Script>
    <Objects>
      <Dataset id="dsSearch" useclientlayout="false">
        <ColumnInfo>
          <Column id="BRAN_CD" size="256" type="STRING"/>
          <Column id="BRAN_NM" type="STRING" size="256"/>
          <Column id="BRAN_DV" type="STRING" size="256"/>
          <Column id="CP_DV" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsService" useclientlayout="false">
        <ColumnInfo>
          <Column id="SVC_ID" size="256" type="STRING"/>
          <Column id="IN_DATASET_LIST" size="256" type="STRING"/>
          <Column id="OUT_DATASET_LIST" size="256" type="STRING"/>
          <Column id="QUERY_LIST" size="256" type="STRING"/>
          <Column id="CALLBACK" size="256" type="STRING"/>
          <Column id="SYNC_YN" size="256" type="STRING"/>
          <Column id="SERVICE_BEANNAME" size="256" type="STRING"/>
          <Column id="SERVICE_METHOD" size="256" type="STRING"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="SVC_ID">updateUserPw</Col>
            <Col id="IN_DATASET_LIST">dsUserInfo=dsUserInfo:A</Col>
            <Col id="OUT_DATASET_LIST"/>
            <Col id="CALLBACK">fnCallback</Col>
            <Col id="SYNC_YN">Y</Col>
            <Col id="QUERY_LIST"/>
            <Col id="SERVICE_BEANNAME">baimUserMgmtService</Col>
            <Col id="SERVICE_METHOD">updateUserPw</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsUserInfo">
        <ColumnInfo>
          <Column id="USER_ID" type="STRING" size="256"/>
          <Column id="USER_PW" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="edtUserId" propid="value" datasetid="dsUserInfo" columnid="USER_ID"/>
      <BindItem id="item1" compid="edtUserPw" propid="value" datasetid="dsUserInfo" columnid="USER_PW"/>
    </Bind>
  </Form>
</FDL>
